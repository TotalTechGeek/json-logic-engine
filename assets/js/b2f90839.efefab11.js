"use strict";(self.webpackChunkjson_logic_engine_documentation=self.webpackChunkjson_logic_engine_documentation||[]).push([[568],{1798:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"doc1","title":"Installation and Setup","description":"First, add the module to your application through your preferred package manager,","source":"@site/docs/doc1.md","sourceDirName":".","slug":"/","permalink":"/json-logic-engine/docs/","draft":false,"unlisted":false,"editUrl":"https://github.com/TotalTechGeek/json-logic-engine-documentation/edit/master/website/docs/doc1.md","tags":[],"version":"current","frontMatter":{"id":"doc1","title":"Installation and Setup","sidebar_label":"Installation and Setup","slug":"/"},"sidebar":"someSidebar","next":{"title":"Adding Methods","permalink":"/json-logic-engine/docs/methods"}}');var i=o(4848),s=o(8453);const a={id:"doc1",title:"Installation and Setup",sidebar_label:"Installation and Setup",slug:"/"},l=void 0,r={},c=[];function d(e){const n={blockquote:"blockquote",code:"code",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"First, add the module to your application through your preferred package manager,"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install json-logic-engine \n# or\nyarn add json-logic-engine\n# or \nbun add json-logic-engine\n"})}),"\n",(0,i.jsx)(n.p,{children:'Then import the module, and try to set up a "Hello, World!"'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'import { LogicEngine } from \'json-logic-engine\'\n\nconst engine = new LogicEngine()\n\n// we can make use of the modules function compilation\nconst f = engine.build({\n  cat: ["Hello, ", { var: \'\' }, "!"]\n})\n\nconsole.log(f("World")) // prints "Hello, World!"\n'})}),"\n",(0,i.jsx)(n.p,{children:"Or alternatively, make use of the interpreter using:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:'import { LogicEngine } from \'json-logic-engine\'\n\nconst engine = new LogicEngine()\n\n// we can make use of the modules function compilation\nconsole.log(engine.run({ cat: ["Hello, ", { var: \'\' }, "!"] }, "World"))\n'})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Please note that at the time of writing that while the interpreter is still available in this module, the compilation mechanism yields far better performance in all use-cases & supports all of the same features. The only time you may wish to use ",(0,i.jsx)(n.code,{children:".run"})," is when you are switching over from ",(0,i.jsx)(n.code,{children:"json-logic-js"})," and migrating from it's ",(0,i.jsx)(n.code,{children:".apply"})," method."]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);