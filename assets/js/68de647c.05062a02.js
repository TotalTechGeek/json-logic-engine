"use strict";(self.webpackChunkjson_logic_engine_documentation=self.webpackChunkjson_logic_engine_documentation||[]).push([[468],{2407:(t,i,e)=>{e.r(i),e.d(i,{assets:()=>o,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"math","title":"Math Operators","description":"Operators | Instruction","source":"@site/docs/math.mdx","sourceDirName":".","slug":"/math","permalink":"/json-logic-engine/docs/math","draft":false,"unlisted":false,"editUrl":"https://github.com/TotalTechGeek/json-logic-engine-documentation/edit/master/website/docs/math.mdx","tags":[],"version":"current","frontMatter":{"id":"math","title":"Math Operators"},"sidebar":"someSidebar","previous":{"title":"Differences from json-logic-js","permalink":"/json-logic-engine/docs/doc3"},"next":{"title":"Logic Operators","permalink":"/json-logic-engine/docs/logic"}}');var d=e(4848),s=e(8453),l=e(9126);const a={id:"math",title:"Math Operators"},r=void 0,o={},c=[{value:"Addition",id:"addition",level:2},{value:"Subtraction",id:"subtraction",level:2},{value:"Multiplication",id:"multiplication",level:2},{value:"Division",id:"division",level:2},{value:"Modulo",id:"modulo",level:2},{value:"Maximum",id:"maximum",level:2},{value:"Minimum",id:"minimum",level:2}];function u(t){const i={h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...t.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsxs)(i.table,{children:[(0,d.jsx)(i.thead,{children:(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.th,{children:"Operators"}),(0,d.jsx)(i.th,{children:"Instruction"})]})}),(0,d.jsxs)(i.tbody,{children:[(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{children:"Addition"}),(0,d.jsx)(i.td,{children:"+"})]}),(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{children:"Subtraction"}),(0,d.jsx)(i.td,{children:"-"})]}),(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{children:"Multiplication"}),(0,d.jsx)(i.td,{children:"*"})]}),(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{children:"Division"}),(0,d.jsx)(i.td,{children:"/"})]}),(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{children:"Modulo"}),(0,d.jsx)(i.td,{children:"%"})]}),(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{children:"Maximum"}),(0,d.jsx)(i.td,{children:"min"})]}),(0,d.jsxs)(i.tr,{children:[(0,d.jsx)(i.td,{children:"Minimum"}),(0,d.jsx)(i.td,{children:"max"})]})]})]}),"\n",(0,d.jsx)(i.h2,{id:"addition",children:"Addition"}),"\n",(0,d.jsx)(l.A,{defaultLogic:{"+":[1,{var:""}]},defaultData:2}),"\n",(0,d.jsx)(i.p,{children:"This method can also be used to cast strings to numbers, and sum up the output returned by other function calls."}),"\n",(0,d.jsx)(i.h2,{id:"subtraction",children:"Subtraction"}),"\n",(0,d.jsx)(l.A,{defaultLogic:{"-":[10,{var:""}]},defaultData:2}),"\n",(0,d.jsx)(i.h2,{id:"multiplication",children:"Multiplication"}),"\n",(0,d.jsx)(l.A,{defaultLogic:{"*":[5,{var:""}]},defaultData:3}),"\n",(0,d.jsx)(i.h2,{id:"division",children:"Division"}),"\n",(0,d.jsx)(l.A,{defaultLogic:{"/":[1,{var:""}]},defaultData:2}),"\n",(0,d.jsx)(i.h2,{id:"modulo",children:"Modulo"}),"\n",(0,d.jsx)(l.A,{defaultLogic:{"%":[5,{var:""}]},defaultData:3}),"\n",(0,d.jsx)(i.h2,{id:"maximum",children:"Maximum"}),"\n",(0,d.jsx)(l.A,{defaultLogic:{max:[1,8,{var:""}]},defaultData:13}),"\n",(0,d.jsx)(i.h2,{id:"minimum",children:"Minimum"}),"\n",(0,d.jsx)(l.A,{defaultLogic:{min:[1,8,{var:""}]},defaultData:5})]})}function h(t={}){const{wrapper:i}={...(0,s.R)(),...t.components};return i?(0,d.jsx)(i,{...t,children:(0,d.jsx)(u,{...t})}):u(t)}}}]);