"use strict";(self.webpackChunkjson_logic_engine_documentation=self.webpackChunkjson_logic_engine_documentation||[]).push([[789],{4989:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"someSidebar":[{"type":"category","label":"Discussion","items":[{"type":"link","label":"Installation and Setup","href":"/json-logic-engine/docs/","docId":"doc1","unlisted":false},{"type":"link","label":"Adding Methods","href":"/json-logic-engine/docs/methods","docId":"methods","unlisted":false},{"type":"link","label":"Asynchronous Engine","href":"/json-logic-engine/docs/async","docId":"async","unlisted":false},{"type":"link","label":"Blazing Fast via Compilation","href":"/json-logic-engine/docs/doc2","docId":"doc2","unlisted":false},{"type":"link","label":"Differences from json-logic-js","href":"/json-logic-engine/docs/doc3","docId":"doc3","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Default Operations","items":[{"type":"link","label":"Math Operators","href":"/json-logic-engine/docs/math","docId":"math","unlisted":false},{"type":"link","label":"Logic Operators","href":"/json-logic-engine/docs/logic","docId":"logic","unlisted":false},{"type":"link","label":"String Operators","href":"/json-logic-engine/docs/string","docId":"string","unlisted":false},{"type":"link","label":"Array Operators","href":"/json-logic-engine/docs/array","docId":"array","unlisted":false},{"type":"link","label":"Miscellaneous Operators","href":"/json-logic-engine/docs/misc","docId":"misc","unlisted":false},{"type":"link","label":"Context Operators","href":"/json-logic-engine/docs/context","docId":"context","unlisted":false},{"type":"link","label":"Higher Order Operators","href":"/json-logic-engine/docs/higher","docId":"higher","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"array":{"id":"array","title":"Array Operators","description":"Array Operators","sidebar":"someSidebar"},"async":{"id":"async","title":"Asynchronous Engine","description":"Asynchronous Engine","sidebar":"someSidebar"},"context":{"id":"context","title":"Context Operators","description":"Context Operators","sidebar":"someSidebar"},"doc1":{"id":"doc1","title":"Installation and Setup","description":"First, add the module to your application through your preferred package manager,","sidebar":"someSidebar"},"doc2":{"id":"doc2","title":"Blazing Fast via Compilation","description":"json-logic-engine has support for logic compilation which greatly enhances run-time performance of your logic. In a number of (simpler) cases, it can get rather close to native performance. Additionally, as of v2.0.0, the interpreter has an optimizer that can cache the execution plan of the logic if re-used, improving interpreted performance without the need for compilation.","sidebar":"someSidebar"},"doc3":{"id":"doc3","title":"Differences from json-logic-js","description":"At the time of writing, json-logic-engine is  100% compatible with json-logic-js\'s test suite","sidebar":"someSidebar"},"higher":{"id":"higher","title":"Higher Order Operators","description":"Higher order operations are significantly more complex than the other types of operations, because they allow you to apply a piece of logic iteratively.","sidebar":"someSidebar"},"logic":{"id":"logic","title":"Logic Operators","description":"Operators | Instruction","sidebar":"someSidebar"},"math":{"id":"math","title":"Math Operators","description":"Operators | Instruction","sidebar":"someSidebar"},"methods":{"id":"methods","title":"Adding Methods","description":"While the default methods support a lot of common functionality, to make the logic engine useful within your domain & give it the ability to interact with your platform, the module has tried to make it simple to add new commands into the framework.","sidebar":"someSidebar"},"misc":{"id":"misc","title":"Miscellaneous Operators","description":"Operators | Instruction","sidebar":"someSidebar"},"string":{"id":"string","title":"String Operators","description":"Operators | Instruction","sidebar":"someSidebar"}}}}')}}]);